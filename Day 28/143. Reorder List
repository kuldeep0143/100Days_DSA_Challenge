
class Solution {
    public void reorderList(ListNode head) {
        if(head == null || head.next == null) {
            return ;
        }

        ListNode prev = null, slow = head;
        ListNode fast = head, l1 = head;

        while(fast != null && fast.next != null) {
            prev = slow;
            slow = slow.next;
            fast = fast.next.next;
        }
        prev.next = null;
        ListNode l2 = reverse(slow);

        mergeLL (l1,l2);
    }
    ListNode reverse(ListNode head){
        ListNode prev = null,curr = head;
        ListNode temp = null;

        while(curr != null) {
            temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;
    }
    void mergeLL (ListNode l1, ListNode l2) {
        while(l1 != null) {
            ListNode n1 = l1.next,n2 = l2.next;
            l1.next = l2;

            if(n1 == null) 
            break;

            l2.next = n1;
            l1 = n1;
            l2 = n2;
        }
    }
}
