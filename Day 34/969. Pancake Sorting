class Solution {
    public List<Integer> pancakeSort(int[] arr) {
        List<Integer> result = new ArrayList<>();
        
        for (int i = arr.length - 1; i >= 0; i--) {
            int maxIndex = findMaxIndex(arr, i);
            
            if (maxIndex == -1) {
                continue;
            }
            
            flip(arr, maxIndex);
            result.add(maxIndex + 1);
            
            
            flip(arr, i);
            result.add(i + 1);
        }
        return result;
    }
    
    private int findMaxIndex(int[] arr, int k) {
        int maxIndex = -1;
        int maxValue = Integer.MIN_VALUE;
        for (int i = 0; i <= k; i++) {
            if (maxValue < arr[i]) {
                maxIndex = i;
                maxValue = arr[i];
            }
        }
        return maxIndex;
    }
    
    private void flip(int[] arr, int k) {
        int left = 0, right = k;
        while (left < right) {
            int temp = arr[left];
            arr[left] = arr[right];
            arr[right] = temp;
            left++;
            right--;
        }
    }
}
