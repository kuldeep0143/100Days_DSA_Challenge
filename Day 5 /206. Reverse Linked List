
class Solution {
                  //Iterative TC => 0(N) & SC => 0(1)

//     public ListNode reverseList(ListNode head) {
//        ListNode cur = head;
//        ListNode prev = null;
//        ListNode temp= null;
//        while(cur!=null){
//            temp=cur.next;
//            cur.next=prev;
//            prev=cur;
//            cur=temp;
//        }
//        return prev;
//     }
// }

  //Recursive TC => 0(N) & SC => 0(1)

public ListNode reverseList(ListNode head) {
    if(head == null || head.next == null){
        return head;
    } 
    ListNode reverseLL = reverseList(head.next);
    head.next.next = head;
    head.next = null ; 

    return reverseLL;
}
}
