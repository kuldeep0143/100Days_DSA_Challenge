//TC => 0(N)  & SC => 0(1)
class Solution {
    public boolean validMountainArray(int[] arr) {
        int n = arr.length;
        if(n<3){
            return false;
        }
        int i = 0;
        // Traverse the increasing part of the mountain
        while (i < n - 1 && arr[i] < arr[i + 1]) {
            i++;

        }
        
        // Check if the peak is not at the beginning or end
        if (i == 0 || i == n - 1) {
            return false;
        }
        
        // Traverse the decreasing part of the mountain
        while (i < n - 1 && arr[i] > arr[i + 1]) {
            i++;
        }
        
        // If we reached the end, it's a valid mountain array
        return i == n - 1;
    }
}
