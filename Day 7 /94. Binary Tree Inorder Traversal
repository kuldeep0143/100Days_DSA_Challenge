// we perform an inorder traversal by recursively visiting the left subtree, then the current node, and finally the right subtree.
class Solution {
    private List <Integer> res = new ArrayList<>();
    public List<Integer> inorderTraversal(TreeNode root) {
        traverse(root);
        return res;
    }
    private void traverse (TreeNode root){
        if(root==null) return ;
        traverse(root.left);
        res.add(root.val);
        traverse(root.right);
    }
}
