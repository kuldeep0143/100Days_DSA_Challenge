//Preoredered travelsal fist visiting the current node, then recursively visiting the left and right subtrees.
 // TC => 0(n) && SC => 0(n)
class Solution {
    private  List<Integer> result = new ArrayList<>();
    public List<Integer> preorderTraversal(TreeNode root) {
	traversal(root);
	return result;
   }
   
   private void traversal(TreeNode root) {
	if(root == null) return;
	result.add(root.val);  
	traversal(root.left);
	traversal(root.right);
   }
}
