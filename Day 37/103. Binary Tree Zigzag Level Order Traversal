
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {

        if(root ==null) return new ArrayList<>();
     
        List<List<Integer>> list= new ArrayList<>();
        Queue<TreeNode> q= new LinkedList<>();
        q.offer(root);
        boolean isReversed=true;

        while(!q.isEmpty()){
            int size= q.size();
            ArrayList<Integer> innerList= new ArrayList<>();
            for(int i=0; i<size; i++){
                TreeNode current= q.poll();
                if(current.left != null) q.offer(current.left);
                if(current.right != null) q.offer(current.right);
                innerList.add(current.val);                
            }
            if(!isReversed){
                Collections.reverse(innerList);
            }
            list.add(innerList);
            isReversed= !isReversed;
        }
        return list;
    }
}
