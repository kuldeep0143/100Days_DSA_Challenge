//Hashmap Approach and TC => 0(max(m,n)) & SC =>0(m)

class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        Map<Integer,Integer> count = new HashMap<>();

      //Count of fresquency of elements in nums1
        for(int num : nums1){
            count.put(num,count.getOrDefault(num,0)+1);
        }
        List<Integer> res = new ArrayList<>();
        //Find common elements in nums2
        for(int num :nums2){
            if(count.containsKey(num) && count.get(num)>0){
                res.add(num);
                count.put(num,count.get(num)-1);
            }
        }
        int [] result = new int [res.size()];
        //convert the list into Array
        for(int i = 0;i<res.size();i++){
            result[i]=res.get(i);
        }
        return result;
    }
}
